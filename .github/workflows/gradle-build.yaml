name: Gradle

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Cache Kotlin Native
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-konan-
      - name: Build with Gradle
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            ./gradlew --no-daemon linkReleaseExecutableLinuxX64 linuxX64Test
          elif [ "$RUNNER_OS" == "macOS" ]; then
            ./gradlew --no-daemon jvmJar jsBrowserProductionWebpack linkReleaseExecutableMacosX64 jvmTest jsTest macosX64Test
          elif [ "$RUNNER_OS" == "Windows" ]; then
            ./gradlew --no-daemon linkReleaseExecutableMingwX64 mingwX64Test
          else
            echo "Unknown OS: $RUNNER_OS"
            exit 1
          fi
        shell: bash
      - name: Publish snapshot
        if: runner.os == 'macOS'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_DEPLOY_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_DEPLOY_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.PGP_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.PGP_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.PGP_PASSPHRASE }}
        run: ./publish-snapshot.sh
      - name: Upload GitHub Pages artifact
        if: runner.os == 'macOS'
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/dist/js/productionExecutable/
      - name: Archive distributed artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kotwords-build-${{ runner.os }}
          path: |
            build/bin/**/releaseExecutable/kotwords.*

  deploy:
    if: github.repository == 'jpd236/kotwords' && github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4